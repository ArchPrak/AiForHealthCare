generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(cuid())
  userId            String   @map("user_id")
  type              String
  provider          String
  providerAccountId String   @map("provider_account_id")
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id                           String    @id @default(cuid())
  dfda_user_id                 Int?
  dfda_access_token            String?
  dfda_refresh_token           String?
  dfda_expires_in              Int?
  dfda_scope                   String?
  dfda_access_token_expires_at DateTime?
  address                      String?
  banned                       Boolean?
  birthday                     DateTime?
  city                         String?
  countryCode                  String?   @map("country_code")
  createdAt                    DateTime  @default(now()) @map("created_at")
  deletedAt                    DateTime? @map("deleted_at")
  email                        String?   @unique
  emailVerified                DateTime? @map("email_verified")
  emailValidated               Boolean   @default(false) @map("email_validated")
  firstName                    String?   @map("first_name")
  gdprConsent                  Boolean   @default(false) @map("gdpr_consent")
  gender                       String?
  image                        String?
  ipAddress                    String?   @map("ip_address") @db.VarChar(45)
  language                     String?
  lastName                     String?   @map("last_name")
  lastSignInAt                 BigInt?   @map("last_sign_in_at")
  name                         String?
  newsletterSubscribed         Boolean   @default(false) @map("newsletter_subscribed")
  phoneNumber                  String?   @map("phone_number")
  postalCode                   String?   @map("postal_code")
  referrerUserId               String?   @map("referrer_user_id")
  stateProvince                String?   @map("state_province")
  updatedAt                    DateTime  @updatedAt @map("updated_at")
  username                     String    @unique @default(uuid())
  web3Wallet                   String?   @map("web3_wallet")
  unsafeMetadata               Json?     @map("unsafe_metadata")
  publicMetadata               Json?     @map("public_metadata")
  privateMetadata              Json?     @map("private_metadata")
  accounts                     Account[]
  sessions                     Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}
